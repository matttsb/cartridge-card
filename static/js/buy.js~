// Created by Larry Ullman, www.larryullman.com, @LarryUllman
// Posted as part of the series "Processing Payments with Stripe"
// http://www.larryullman.com/series/processing-payments-with-stripe/
// Last updated April 14, 2015

// This page is intended to be stored in a public "js" directory.

// This function is just used to display error messages on the page.
// Assumes there's an element with an ID of "payment-errors".
function reportError(msg) {
	// Show the error in the form:
	$('#payment-errors').text(msg).addClass('alert alert-error');
	// re-enable the submit button:
	$('#submitBtn').prop('disabled', false);
	return false;
}

// Assumes jQuery is loaded!
// Watch for the document to be ready:
$(document).ready(function() {

	// Watch for a form submission:
	$(".checkout-form").submit(function(event) {


		console.log("Ok, form submit button clicked.");
		// Flag variable:
		var error = false;

		// disable the submit button to prevent REPEATED CLICKS:
		$('#submitBtn').attr("disabled", "disabled");

		// Get the values:
		var ccNum = $('#id_card_number').val(), cvcNum = $('#id_card_ccv').val(), expMonth = $('#id_card_expiry_month').val(), expYear = $('#id_card_expiry_year').val();
		console.log(ccNum);
		console.log(cvcNum);
		console.log(expMonth);
		console.log(expYear);

		// Validate the number:
		if (!Stripe.card.validateCardNumber(ccNum)) {
			error = true;
			reportError('The credit card number appears to be invalid.');
		}

		// Validate the CVC:
		if (!Stripe.card.validateCVC(cvcNum)) {
			error = true;
			reportError('The CVC number appears to be invalid.');
		}

		// Validate the expiration:
		if (!Stripe.card.validateExpiry(expMonth, expYear)) {
			error = true;
			reportError('The expiration date appears to be invalid.');
		}

		// Validate other form elements, if needed!

		// Check for errors:
		if (!error) {
                        console.log("No errors, getting token");
			// Get the Stripe token:
			Stripe.card.createToken({
				number: ccNum,
				cvc: cvcNum,
				exp_month: expMonth,
				exp_year: expYear
			}, stripeResponseHandler);

		}
		// The above stripe method seems to work so that if there is no token, the response handler is not called and there is no return from event checker.

		console.log("Returning from event checker.");
		// Prevent the form from submitting:
		return false;

	}); // Form submission

}); // Document ready.

// Function handles the Stripe response:
function stripeResponseHandler(status, response) {

	console.log("In response handler");
	// Check for an error:
	if (response.error) {
		console.log("there is an error");
		reportError(response.error.message);

                console.log("ERROR");

	} else { // No errors, submit the form:

		console.log("there is no error");

	  	var f = $(".checkout-form");

	  	// Token contains id, last4, and card type:
	  	var token = response['id'];

	  	// Insert the token into the form so it gets submitted to the server
	  	f.append("<input type='hidden' name='stripeToken' value='" + token + "' />");

	  	// Submit the form:
	  	//f.get(0).submit();   
          	console.log("WPS Token: "+token);
	}
} // End of stripeResponseHandler() function.
